name: Publish UI to npm

on:
  push:
    branches:
      - main
    paths:
      - 'packages/flora/**'
      - '.github/workflows/publish-ui.yaml'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Get local package version
        id: local-version
        working-directory: packages/flora
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Local version: $VERSION"

      - name: Get published npm version
        id: npm-version
        run: |
          PUBLISHED_VERSION=$(npm view @binarygarden/flora version 2>/dev/null || echo "none")
          echo "version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          echo "Published version: $PUBLISHED_VERSION"

      - name: Check if version is new
        id: should-publish
        run: |
          if [ "${{ steps.local-version.outputs.version }}" = "${{ steps.npm-version.outputs.version }}" ]; then
            echo "publish=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.local-version.outputs.version }} already published, skipping publish"
          else
            echo "publish=true" >> $GITHUB_OUTPUT
            echo "New version detected: ${{ steps.local-version.outputs.version }} (current: ${{ steps.npm-version.outputs.version }})"
          fi

      - name: Install dependencies
        if: steps.should-publish.outputs.publish == 'true'
        run: pnpm install

      - name: Build UI library
        if: steps.should-publish.outputs.publish == 'true'
        run: pnpm build:ui

      - name: Publish to npm
        if: steps.should-publish.outputs.publish == 'true'
        working-directory: packages/flora
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
